# import pandas as pd

# # 读取Excel文件，这里假设文件名为data.xlsx，位于当前工作目录下
# excel_file = 'E:\\桌面\\黄河生态环境分区管控和高质量发展协同研究项目\数据\\2020提取\\2020 - 副本.xlsx'

# # 读取第一个工作表的数据
# df_sheet1 = pd.read_excel(excel_file, sheet_name=0)
# print(df_sheet1)

# # 读取名为'Sheet2'（假设第二个工作表叫这个名字）的工作表的数据
# df_sheet2 = pd.read_excel(excel_file, sheet_name='Sheet2')
# print(df_sheet2)

# import pandas as pd

# # 读取文件
# excel_file = pd.ExcelFile('E:\桌面\黄河生态环境分区管控和高质量发展协同研究项目\数据\\2020提取\归一化.xls')

# # 获取指定工作表中的数据
# df = excel_file.parse('Sheet1')

# # 找出需要归一化的列并转换为数值类型
# columns_to_convert = ['地区生产总值（亿元）', '地区人口(万人）', '人均地区生产总值（元）计算值', '行政区面积（km2）', '生态保护红线面积（km2）', '工业用水量（万立方米）', '农业用水量（万立方米）', '生活用水量（万立方米）', '单位地区生产总值用水量（立方米/万元）', '单位工业增加值用水量（立方米/万元）', '居民人均可支配收入（元）', '第一产业增加值（亿元）', '第二产业增加值（亿元）', '第三产业增加值（亿元）', '一般公共预算收入（亿元）', '一般公共预算支出（亿元）', '居民人均消费性支出（元）', '工业增加值（亿元）', '农林牧渔业总产值（亿元）', '粮食总产量（万吨）', '城镇化率（%）', '服务业占GDP比重', '建成区绿化覆盖率（%）', '人均公园绿地面积（平方米/人）', '城市和县城污水集中处理率（%）', '植被固碳量sequestration（单位kg/(a·m²)）', '煤炭消费量（吨）', '二氧化硫排放量（吨）', '二氧化碳排放量（吨）', '氮氧化物排放量（吨）', 'PM2.5浓度（μg/m3）', '生态空间(平方米)', '农业空间(平方米)', '城镇空间(平方米)', 'NDVI(植被指数)', 'FVC(植被覆盖度)', 'Lai(叶面积指数)', '优先保护单元面积（KM²）', '重点管控单元面积（KM²）', '一般管控单元面积（KM²）']
# for col in df.columns:
#     if col in columns_to_convert:
#         df[col] = pd.to_numeric(df[col], errors='coerce')

# # 提取数值类型的数据
# new_df = df.select_dtypes(include=['float64', 'int64'])

# # 计算每个数值列的最小 - 最大值
# min_max_values = new_df.select_dtypes(include=['float64', 'int64']).agg(['min', 'max']).T

# # 对数据进行最小 - 最大归一化处理
# scaled_df = (new_df - min_max_values['min']) / (min_max_values['max'] - min_max_values['min'])*100

# # 将结果保存为 CSV 文件
# csv_path = 'E:\桌面\黄河生态环境分区管控和高质量发展协同研究项目\数据\\2020提取\归一.csv'
# scaled_df.to_csv(csv_path)

import pandas as pd

# 读取文件
excel_file = pd.ExcelFile('E:\桌面\黄河生态环境分区管控和高质量发展协同研究项目\数据\\2020提取\指标del\第四次重做\删除指标后原始数据-方向化.xlsx')

# 获取指定工作表中的数据
df = excel_file.parse('Sheet1')

# 找出需要归一化的列并转换为数值类型
columns_to_convert = ['地区生产总值（亿元','地区人口 (万人','人均地区生产总值（元）计算值','生态保护红线面积（km2）',' 废水_排放总量（万吨）',' 化学需氧量_排放总量（吨）',' 氨氮排放总量（吨）',' 总氮排放总量（吨）',' 总磷排放总量（吨）',' 农业源化学需氧量排放量（吨）',' 农业源氨氮排放量（吨）',' 农业源总氮排放量（吨）',' 农业源总磷排放量（吨）',' 农药使用量 (吨）','EI 生态环境状况指数 ',' 植被覆盖指数 ',' 工业用水量（万立方米）',' 农业用水量（万立方米）',' 生活用水量（万立方米）',' 人均用水量 ',' 单位地区生产总值用水量（立方米 / 万元）',' 居民人均可支配收入（元）',' 一般公共预算收入（亿元）',' 一般公共预算支出（亿元）',' 居民人均消费性支出（元）',' 工业增加值（亿元）',' 农林牧渔业总产值（亿元）',' 粮食总产量（万吨）',' 城镇化率（%）',' 服务业占 GDP 比重 ',' 建成区绿化覆盖率（%）',' 人均公园绿地面积（平方米 / 人）',' 城市和县城污水集中处理率（%）',' 植被固碳量 sequestration（单位 kg/(a・m²)）',' 煤炭消费量（吨）',' 二氧化硫排放量（吨）',' 二氧化碳排放量（吨）',' 氮氧化物排放量（吨）','PM2.5 浓度（μg/m3）',' 生态空间 (平方米)',' 农业空间 (平方米)',' 城镇空间 (平方米)','NDVI (植被指数)','FVC (植被覆盖度)','Lai (叶面积指数)',' 优先保护单元面积（KM²）',' 重点管控单元面积（KM²）',' 一般管控单元面积（KM²）']
# columns_to_convert = ['历下区', '市中区', '槐荫区', '天桥区', '历城区', '长清区', '章丘区', '莱芜区', '钢城区', '平阴县', '济阳区', '商河县', '淄川区', '张店区', '博山区', '临淄区', '周村区', '桓台县', '高青县', '沂源县', '东营区', '河口区', '垦利区', '利津县', '广饶县', '任城区', '兖州区', '微山县', '鱼台县', '金乡县', '嘉祥县', '汶上县', '泗水县', '梁山县', '曲阜市', '邹城市', '泰山区', '岱岳区', '宁阳县', '东平县', '新泰市', '肥城市', '德城区', '陵城区', '宁津县', '庆云县', '临邑县', '齐河县', '平原县', '夏津县', '武城县', '乐陵市', '禹城市', '东昌府区', '阳谷县', '莘县', '茌平区', '东阿县', '冠县', '高唐县', '临清市', '滨城区', '沾化区', '惠民县', '阳信县', '无棣县', '博兴县', '邹平市', '牡丹区', '定陶区', '曹县', '单县', '成武县', '巨野县', '郓城县', '鄄城县', '东明县']

for col in df.columns:
    if col in columns_to_convert:
        df[col] = pd.to_numeric(df[col], errors='coerce')

# 提取数值类型的数据
new_df = df.select_dtypes(include=['float64', 'int64'])

# 计算每个数值列的5%和95%分位数
percentiles = new_df.quantile([0.05, 0.95])

# 将数据进行截断，小于5%分位数的值设为5%分位数，大于95%分位数的值设为95%分位数
new_df = new_df.clip(lower=percentiles.loc[0.05], upper=percentiles.loc[0.95], axis=1)

# 计算每个数值列的最小 - 最大值
min_max_values = new_df.agg(['min', 'max']).T

# 对数据进行最小 - 最大归一化处理
scaled_df = (new_df - min_max_values['min']) / (min_max_values['max'] - min_max_values['min']) * 100

# 将结果保存为 CSV 文件
csv_path = 'E:\桌面\黄河生态环境分区管控和高质量发展协同研究项目\数据\\2020提取\指标del\第四次重做\归一化结果2.csv'
scaled_df.to_csv(csv_path)
